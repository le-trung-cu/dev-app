generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma-jira-database/jira-database-client-types"
}

datasource db {
  provider = "sqlite"
  url      = env("SQLITE_JIRA_DATABASE_URL")
}

enum Role {
  Admin
  Member
}

enum Priority {
  High
  Medium
  Low
}

enum TaskStatus {
  Backlog
  Todo
  InProcess
  InReview
  Done
}

model Workspace {
  id         Int       @id @default(autoincrement())
  name       String
  userId     String
  imageUrl   String
  inviteCode String
  members    Member[]
  projects   Project[]
  tasks      Task[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt
}

model Project {
  id          Int       @id @default(autoincrement())
  name        String
  workspaceId Int
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  task        Task[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
}

model Task {
  id          Int         @id @default(autoincrement())
  name        String
  endDate     DateTime?
  workspaceId Int
  workspace   Workspace   @relation(fields: [workspaceId], references: [id])
  projectId   Int?
  project     Project?    @relation(fields: [projectId], references: [id])
  assigneeId  Int?
  assignee    Member?     @relation(fields: [assigneeId], references: [id])
  status      TaskStatus?
  priority    Priority?
  position    Int         @default(1)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
}

model Member {
  id          Int       @id @default(autoincrement())
  userId      String
  workspaceId Int
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  role        Role
  tasks       Task[]
  joined      Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
}
